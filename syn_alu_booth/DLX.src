##############################################################
exec mkdir -p work
exec mkdir -p report
exec mkdir -p netlistanalyze -library WORK -format vhdl {
analyze -library WORK -format vhdl {000-globals.vhd}
analyze -library WORK -format vhdl {01-fa.vhd}
analyze -library WORK -format vhdl {01-generic_mux21.vhd}
analyze -library WORK -format vhdl {01-generic_mux31.vhd}
analyze -library WORK -format vhdl {01-generic_rca.vhd}
analyze -library WORK -format vhdl {01-generic_csa.vhd}
analyze -library WORK -format vhdl {01-generic_register.vhd}
analyze -library WORK -format vhdl {01-ffd.vhd}
analyze -library WORK -format vhdl {01-ivx.vhd}
analyze -library WORK -format vhdl {01-nand2.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.a-adder.core/a.b.a.a.a-pg_network.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.a-adder.core/a.b.a.a.b-g_block.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.a-adder.core/a.b.a.a.c-pg_block.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.a-adder.core/a.b.a.a.d-carry_select_block.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.a-adder.core/a.b.a.a.e-sum_generator.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.a-adder.core/a.b.a.a.f-sparse_tree.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.b-shifter.core/a.b.a.b.a-mask_generator.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.b-shifter.core/a.b.a.b.b-coarse_shift.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.b-shifter.core/a.b.a.b.c-fine_shift.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.c-logic.core/a.b.a.c.a-nand3.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.c-logic.core/a.b.a.c.b-nand4.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.f-multiplier.core/a.b.a.f.a-shifter_mult.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.f-multiplier.core/a.b.a.f.b-mux58_mult.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.a-adder.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.b-shifter.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.c-logic.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.d-comparator.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.e-zero_detector.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU.core/a.b.a.f-booth_multiplier_v1.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.a-ALU_v1.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.b-register_file.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.c-sign_extend.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.d-branch_unit.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.core/a.b.e-forwarding_unit.vhd}
analyze -library WORK -format vhdl {a.a-CU_HW.vhd}
analyze -library WORK -format vhdl {a.b-DataPath.vhd}
analyze -library WORK -format vhdl {a-DLX.vhd}

# Elaborate
#current_design DLX_WIDTH32
#elaborate DLX -architecture STRUCTURAL -library WORK -parameters "WIDTH = 32"
#set_wire_load_model -name 5K_hvratio_1_4

#Unconstrained synthesis
#compile -exact_map
#report_area > report/DLX_AREA.txt
#report_timing > report/DLX_TIMING.txt
#report_power > report/DLX_POWER.txt

#Static timing analysis
#1.0 cycle constraint
#create_clock -name "CLK" -period 1.0 CLK
#set_max_delay 1.0 -from [all_inputs] -to [all_outputs]
#compile -exact_map -map_effort high
#report_area > report/DLX_AREA_10.txt
#report_timing > report/DLX_TIMING_10.txt
#report_power > report/DLX_POWER_10.txt
#1.5 cycle constraint
#create_clock -name "CLK" -period 1.5 CLK
#set_max_delay 1.5 -from [all_inputs] -to [all_outputs]
#compile -exact_map -map_effort high
#report_area > report/DLX_AREA_15.txt
#report_timing > report/DLX_TIMING_15.txt
#report_power > report/DLX_POWER_15.txt
#2.0 cycle constraint
#create_clock -name "CLK" -period 2.0 CLK
#set_max_delay 2.0 -from [all_inputs] -to [all_outputs]
#compile -exact_map -map_effort high
#report_area > report/DLX_AREA_20.txt
#report_timing > report/DLX_TIMING_20.txt
#report_power > report/DLX_POWER_20.txt
#2.5 cycle constraint
#create_clock -name "CLK" -period 2.5 CLK
#set_max_delay 2.5 -from [all_inputs] -to [all_outputs]
#compile -exact_map -map_effort high
#report_area > report/DLX_AREA_25.txt
#report_timing > report/DLX_TIMING_25.txt
#report_power > report/DLX_POWER_25.txt
#3.0 cycle constraint
#create_clock -name "CLK" -period 3.0 CLK
#set_max_delay 3.0 -from [all_inputs] -to [all_outputs]
#compile -exact_map -map_effort high
#report_area > report/DLX_AREA_30.txt
#report_timing > report/DLX_TIMING_30.txt
#report_power > report/DLX_POWER_30.txt


#Clock Gating
#create_clock -name "CLK" -period 1.5 CLK
#set_max_delay 1.5 -from [all_inputs] -to [all_outputs]

#report_clock_gating > report/CLK_GATING_BEFORE.txt

#write -hierarchy -format verilog -output netlist/dlx.v
#write_sdc netlist/dlx.sdc

#current_design REGISTER_FILE_WIDTH32_LENGTH5
#set_clock_gating_style -minimum_bitwidth 1 -max_fanout 1024 -positive_edge_logic {latch and} -control_point before
#compile_ultra -gate_clock
#current_design DLX_WIDTH32

#for {set i 0} {$i <= 3} {incr i} {
#    current_design REGISTER_GENERIC_WIDTH5_$I
#	set_clock_gating_style -minimum_bitwidth 1 -max_fanout 1024 -positive_edge_logic {latch and} -control_point before
#	compile_ultra -gate_clock
#	current_design DLX_WIDTH32
#}

#for {set i 0} {$i <= 12} {incr i} {
#    current_design REGISTER_GENERIC_WIDTH32_$i
#	set_clock_gating_style -minimum_bitwidth 1 -max_fanout 1024 -positive_edge_logic {latch and} -control_point before
#	compile_ultra -gate_clock
#	current_design DLX_WIDTH32
#}

#current_design DLX_WIDTH32
#report_clock_gating > report/CLK_GATING_AFTER.txt
#report_area > report/DLX_AREA_GATED.txt
#report_timing > report/DLX_TIMING_GATED.txt
#report_power > report/DLX_POWER_GATED.txt

#write -hierarchy -format verilog -output netlist/dlx_gated.v
#write_sdc netlist/dlx_gated.sdc



